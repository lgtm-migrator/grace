import std::dict;
import std::list;

class Person:
  var name;
  var age;

  constructor(n, a):
    name = n;
    age = a;
  end
end

func say_hello(this Person person):
  println("Hello from Person()");
end

func double(this Int i) :: Int:
  return i * 2;
end

func make_list(value):
  return [value];
end

func duplicate(this List list):
  return list * 2;
end

class Object:
  var child;
end

func f():
  for i in [0..10000]:
    var o = Object();
    var p = Object();
    o.child = p;
    p.child = o;
  end
end

func main():
  final l = [];
  for i in [0..10]:
    l.append(i);
  end
  println(l.at(5).double());
  println(l.length());
  for i in [0..l.length()]:
    l.set(i, "HELLO");
  end
  println(l);
  println(5.double());

  final d = {"Ryan": "Jeffares"};
  println(d.remove("Ryan"));
  println(d.remove(1));
  println(d);

  d.insert("Syl", "Morrison");
  println(d);
  d.insert("Syl", "[redacted]");
  println(d);
  println(d.contains_key("Syl"));

  println(make_list(5).duplicate());

  var p = Person("Ryan", 23);
  println(typename(p));
  p.say_hello();

  var k = {"Ryan": "Jeffares"}.contains_key("Syl");
  println(k);
end
